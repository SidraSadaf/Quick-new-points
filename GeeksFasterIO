// C++ program to demonstrate fast input and output
 
// use long long x = fast_input(); to read in x
inline long long int fast_input(void)
{
    char t;
    long long int x=0;
    long long int neg=0;
    t = getchar();
    while ((t<48 || t>57) && t!='-')
        t = getchar();
    if (t == '-') //handle negative input
    {
        neg = 1;
        t = getchar();
    }
    while (t>=48 && t<=57)
    {
        x = (x<<3) + (x<<1) + t - 48;
 
        // x<<3 means 8*x and x<<1 means 2*x so we
        // have x = 10*x+(t - 48)
        t = getchar();
    }
 
    if (neg)
        x = -x;
    return x;
}
 
 
// use fast_output(x, 0); to print x and a newline
// use fast_output(x, 1); to print x and a ' ' after
// the x
inline void fast_output(long long int x, int mode)
{
    char a[20];
    long long int i=0, j;
    a[0] = '0';
    if (x < 0)
    {
        putchar('-');
        x = -x;
    }
    if (x==0)
       putchar('0');
    while (x)
    {
        // convert each digit to character and
        // store in char array
        a[i++] = x%10 + 48;
        x /= 10;
    }
 
    // print each character from the array
    for (j=i-1; j>=0; j--)
        putchar(a[j]);
 
    if (mode == 0)
       putchar('\n');
    else putchar(' ');
}
